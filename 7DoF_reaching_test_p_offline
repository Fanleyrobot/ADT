#!/bin/bash

# File
# @description:
#     This file is for testing a percetion module using a test set.
# @version: V0.10
# @author: Fangyi Zhang   email:gzzhangfangyi@gmail.com
# @acknowledgement:
#     ARC Centre of Excellence for Robotic Vision (ACRV)
#     Queensland Univsersity of Technology (QUT)
# @history:
#     V0.00   15/06/2016  developed the first version
#     V0.10   24/09/2018  re-organized

if [ -z "$1" ]
  then echo "Please provide the filename of the ploted curve and history data, e.g.  ./manipulation_cpu threelink "; exit 0
fi

PLOTNAME=$1

display=1 # Set to 1 to watch agent train (works only if display is available)
# Check GUI availability
xhost +si:localuser:$( whoami ) >&/dev/null && {
	# GUI available
	display_avail=1
} || {
	# GUI not available
	display_avail=0
}

#======= Simulator Settings & Input Dimension ===================
sim_file="simulator/vrep_baxter_picking_inhand_cam_dataset_test_p"
ncols=3 # the number of color chanels of the inputs to networks, it is 1 here since images will be rescaled and transfered to grey image before being input to networks.
feature_dim={256,256} # the dimention of one frame of output features from the simulator after scaling
state_dim=65536 # the one-dimensional size of one input frame

#======= Network Settings ==================
agent="ADTLearner"
# agent="SupervisedLearner"
netfile="\"net/convnet_percept\""
# preproc_net="\"net/net_downsample_256_full_y\""
preproc_net="\"net/net_downsample_256_with_normalization\""
# preproc_net="\"net/net_downsample_256_complex_with_normalization\""
agent_type="CNN"
agent_name=$agent_type"_"$PLOTNAME
hist_len=1 # the number of frames input to the network
fixed_layers={} # set the index of the weight-fixed layers
agent_mode=2 # set agent mode three mode options: 1:e2e, 2:perception, 3:ctrl; it is e2e by default

#======= Training Settings ==================
n_replay=1 #learning how many times when updating Q value function
wc=0 #the lamda of L2 regularization term
seed=1
learn_start=5000 # the learning will start at this step, before which the game actiona will be randomly selected, Q value will not be updated
lr=0.01 # learning rate at the beginning
lr_end=0.01 # leaqrning rate at the end
lr_endt=6000000 # the step of the learning rate end point
minibatch_size=96 # the minibatch size
steps=50000000 # maximum training steps
n_vali_set=500 # the size of the validation set

agent_params="mode="$agent_mode",fixed_layers="$fixed_layers",lr="$lr",lr_end="$lr_end",lr_endt="$lr_endt",hist_len="$hist_len",learn_start="$learn_start",n_replay="$n_replay",network="$netfile",preproc="$preproc_net",feature_dim="$feature_dim",state_dim="$state_dim",minibatch_size="$minibatch_size",ncols="$ncols",wc="$wc",clip_delta=1,n_vali_set="$n_vali_set""

#======= Evaluation Settings ====================
eval_freq=100000
prog_freq=10000
save_freq=25000
# Added by Fangyi Zhang to set different plot filename
plot_filename=$PLOTNAME
# End Add

#======= Hardware Settings ======================
gpu=-1 # if use CPU, set it to -1, otherwise, the program will use gpu
num_threads=4 # the number of threads,
# the torch will autonomously take use of multiple cpus to speed up the performance.
# normally, one cpu takes charge of two threads


#======= Testing Settings ======================
network="PP.t7"

#-------Settings for the learning_curve test mode-----------
# network="CNN_PP_test_"
# network="CNN_unsupervised_test_"
net_start=1000
net_end=115000
net_step=1000

#-------Test Mode-----------
# test_mode="single_sample_real" #statistic, single_joint, single_sample, single_sample_real, rand_pose, testset
# test_mode="single_sample" #statistic, single_joint, single_sample, single_sample_real, rand_pose, testset
test_mode="testset" #statistic, single_joint, single_sample, single_sample_real, rand_pose, testset
# test_mode="learning_curve" #evaluate multiple models to re-generate a learning curve using testset
# There are

# test_mode="single_sample" #statistic, single_joint, single_sample, single_sample_real, rand_pose, testset
learning_curve="false"
testset="image300_real_data_144.t7"

args="-net_start $net_start -net_end $net_end -net_step $net_step -network $network -learning_curve $learning_curve -test_mode $test_mode -testset $testset -name $agent_name -agent $agent -agent_params $agent_params -steps $steps -eval_freq $eval_freq -prog_freq $prog_freq -save_freq $save_freq -gpu $gpu -seed $seed -threads $num_threads -display $display -display_avail $display_avail -plot_filename $plot_filename -sim_file $sim_file"
echo $args

cd deep_manipulation
torch_path=$TORCH_PATH
qlua="$torch_path/bin/qlua" # qlua normal place
luajit="$torch_path/bin/luajit" #luajit normal place
script="main_scripts/test_perception.lua"
if [[ "$display_avail" == 1 ]]; then
	# GUI is available
	if [ -e "$qlua" ]
	then $qlua $script $args
	else
	echo "cannot find $qlua"
	fi
else
	# GUI is not available
	if [ -e "$luajit" ]
	then $luajit $script $args
	else
	echo "cannot find $luajit"
	fi
fi
